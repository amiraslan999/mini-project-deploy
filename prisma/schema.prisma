// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id         String   @id @default(cuid())
  externalId String   @unique
  email      String   @unique
  firstName  String?
  lastName   String?
  imageUrl   String?
  role       Role     @default(USER)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  cart       Cart?
  // orders     Order[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  inStock     Boolean  @default(true)
  // category    Category @relation(fields: [categoryId], references: [id])
  // categoryId  String

  cartItems CartItem[]
  // orderItems OrderItem[]
}

// model Category {
//   id       String    @id @default(cuid())
//   name     String
//   // product  Product?
//   products Product[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model CartItem {
  id        String  @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String
}

model Cart {
  id     String     @id @default(cuid())
  user   User       @relation(fields: [userId], references: [id])
  userId String     @unique
  items  CartItem[]
}

// model OrderItem {
//   id        String  @id @default(cuid())
//   product   Product @relation(fields: [productId], references: [id])
//   productId String
//   quantity  Int
//   order     Order   @relation(fields: [orderId], references: [id])
//   orderId   String
// }

// model Order {
//   id        String      @id @default(cuid())
//   user      User        @relation(fields: [userId], references: [id])
//   userId    String
//   total     Float
//   createdAt DateTime    @default(now())
//   updatedAt DateTime    @updatedAt
//   items     OrderItem[]
// }
